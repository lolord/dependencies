[project]
name = "dependencies"
version = "0.1.0"
description = "A python library for resolving parameter dependency"
authors = [
    {name = "lolord", email = "lolord.cn@gmail.com"},
]
dependencies = [
    "anyio>=4.2.0",
]
requires-python = ">=3.11.7,<4.0"
readme = "README.md"
license = {text = "MIT"}


[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]

linting = [
    "eval-type-backport>=0.1.3",
    "ruff==0.1.3",
    "mypy~=1.1.1",
]
testing = [
    "coverage[toml]",
    "pytest",
]
mypy = [
    "mypy",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.version]
path = 'dependencies/__init__.py'

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
include = ["/dependencies", "/tests", "/LICENSE", "/README.md"]


[tool.black]
line-length = 120
target-version = ['py311']



[tool.coverage.run]
source = ['dependencies']
# omit = ['dependencies/__init__.py']
# branch = true
context = '${CONTEXT}'

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    'if typing.TYPE_CHECKING:',
    '@overload',
    '@typing.overload',
    '\(Protocol\):$',
    'typing.assert_never',
    'assert_never',
]

[tool.coverage.paths]
source = [
    'dependencies/',
]

[tool.pyright]
include = ['dependencies', 'tests']
# exclude = []
reportUnnecessaryTypeIgnoreComment = true
# reportUnboundVariable = true

[tool.codespell]
skip = '.git'
# ignore-words-list = ''